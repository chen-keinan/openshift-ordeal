---
benchmark_type: openshift
categories:
  -
    name: Control Plane Components
    sub_category:
      name: 1.1 Master Node Configuration Files
      audit_tests:
        - name: '1.1.1 Ensure that the API server pod specification file permissions are set to 644 or more restrictive (Automated)'
          description: Ensure that the API server pod specification file has permissions of 644 or more restrictive.
          profile_applicability: Master
          audit:
            - '#!/bin/bash for i in $( oc get pods -n openshift-kube-apiserver -l app=openshift-kube- apiserver -o name )
               do
               oc exec -n openshift-kube-apiserver $i -- \
               stat -c %a /etc/kubernetes/static-pod-resources/kube-apiserver-pod.yaml done'
          remediation: No remediation required; file permissions are managed by the operator.
          check_type: multi_param
          impact: None
          eval_expr: "${0} <= 644"
          default_value: By default, in OpenShift 4, the kube-apiserver-pod.yaml file has permissions of 644.
          references:
            - https://docs.openshift.com/container-platform/4.3/architecture/control-plane.html#defining-masters_control-plane
            - https://docs.openshift.com/container-platform/4.5/operators/operator-reference.html#kube-apiserver-operator_red-hat-operators
            - https://docs.openshift.com/container-platform/4.5/operators/operator-reference.html#openshift-apiserver-operator_red-hat-operators
            - https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
        - name: '1.1.2 Ensure that the API server pod specification file ownership is set to root:root (Automated)'
          description: Ensure that the API server pod specification file ownership is set to root:root.
          profile_applicability: Master
          audit:
            - '#!/bin/bash for i in $( oc get pods -n openshift-kube-apiserver -l app=openshift-kube- apiserver -o name )
               do
               oc exec -n openshift-kube-apiserver $i -- \
               stat -c %U:%G /etc/kubernetes/static-pod-resources/kube-apiserver-pod.yaml done'
          remediation: No remediation required; file permissions are managed by the operator.
          check_type: multi_param
          impact: None
          eval_expr: "'${0}' == 'root:root';"
          default_value: By default, in OpenShift 4, the kube-apiserver-pod.yaml file ownership is set to root:root.
          references:
            - https://docs.openshift.com/container-platform/4.3/architecture/control-plane.html#defining-masters_control-plane
            - https://docs.openshift.com/container-platform/4.5/operators/operator-reference.html#kube-apiserver-operator_red-hat-operators
            - https://docs.openshift.com/container-platform/4.5/operators/operator-reference.html#openshift-apiserver-operator_red-hat-operators
            - https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
        - name: '1.1.3 Ensure that the controller manager pod specification file permissions are set to 644 or more restrictive (Automated)'
          description: Ensure that the controller manager pod specification file has permissions of 644 or more restrictive.
          profile_applicability: Master
          audit:
            - '#!/bin/bash for i in $( oc get pods -n openshift-kube-controller-manager -o name -l app=kube-controller-manager)
               do
               oc exec -n openshift-kube-controller-manager $i -- \
               stat -c %a /etc/kubernetes/static-pod-resources/kube-controller-manager-pod.yaml
               done'
          remediation: No remediation required; file permissions are managed by the operator.
          check_type: multi_param
          impact: None
          eval_expr: "${0} <= 644"
          default_value: By default, in OpenShift 4, the kube-controller-manager-pod.yaml file has permissions of 644.
          references:
            - https://docs.openshift.com/container-platform/4.3/architecture/control-plane.html#defining-masters_control-plane
            - https://docs.openshift.com/container-platform/4.5/operators/operator-reference.html#cluster-openshift-controller-manager-operator_red-hat-operators
            - https://docs.openshift.com/container-platform/4.5/operators/operator-reference.html#kube-controller-manager-operator_red-hat-operators
            - https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/
        - name: '1.1.4 Ensure that the controller manager pod specification file ownership is set to root:root (Automated)'
          description: Ensure that the controller manager pod specification file ownership is set to root:root.
          profile_applicability: Master
          audit:
            - '#!/bin/bash for i in $( oc get pods -n openshift-kube-controller-manager -o name -l app=kube-controller-manager)
                           do
                           oc exec -n openshift-kube-controller-manager $i -- \
                           stat -c %U:%G /etc/kubernetes/static-pod-resources/kube-controller-manager-pod.yaml
                           done'
          remediation: No remediation required; file permissions are managed by the operator.
          check_type: multi_param
          impact: None
          eval_expr: "'${0}' == 'root:root';"
          default_value: By default, in OpenShift 4, the kube-controller-manager-pod.yaml file ownership is set to root:root.
          references:
            - https://docs.openshift.com/container-platform/4.3/architecture/control- plane.html#defining-masters_control-plane
            - https://docs.openshift.com/container-platform/4.5/operators/operator- reference.html#cluster-openshift-controller-manager-operator_red-hat-operators
            - https://docs.openshift.com/container-platform/4.5/operators/operator- reference.html#kube-controller-manager-operator_red-hat-operators
            - https://kubernetes.io/docs/reference/command-line-tools-reference/kube- controller-manager/
        - name: '1.1.5 Ensure that the scheduler pod specification file permissions are set to 644 or more restrictive (Automated)'
          description: Ensure that the scheduler pod specification file has permissions of 644 or more restrictive.
          profile_applicability: Master
          audit:
            - '#!/bin/bash for i in $(oc get pods -n openshift-kube-scheduler -l app=openshift-kube-scheduler -o name)
                           do
                           oc exec -n openshift-kube-scheduler $i -- \
                           stat -c %a /etc/kubernetes/static-pod-resources/kube-scheduler-pod.yaml
                           done'
          remediation: No remediation required; file permissions are managed by the operator.
          check_type: multi_param
          impact: None
          eval_expr: "${0} <= 644"
          default_value: By default, in OpenShift 4, openshift-kube-scheduler-pod.yaml file has permissions of 644.
          references:
            - https://docs.openshift.com/container-platform/4.3/architecture/control- plane.html#defining-masters_control-plane
            - https://docs.openshift.com/container-platform/4.5/operators/operator- reference.html#cluster-kube-scheduler-operator_red-hat-operators
            - https://docs.openshift.com/container-platform/4.3/nodes/scheduling/nodes- scheduler-about.html
            - https://kubernetes.io/docs/reference/command-line-tools-reference/kube- scheduler/
        - name: '1.1.6 Ensure that the scheduler pod specification file ownership is set to root:root (Automated)'
          description: Ensure that the scheduler pod specification file ownership is set to root:root.
          profile_applicability: Master
          audit:
            - '#!/bin/bash for i in $(oc get pods -n openshift-kube-scheduler -l app=openshift-kube-scheduler -o name)
                           do
                           oc exec -n openshift-kube-scheduler $i -- \
                           stat -c %U:%G /etc/kubernetes/static-pod-resources/kube-scheduler-pod.yaml
                           done'
          remediation: No remediation required; file permissions are managed by the operator.
          check_type: multi_param
          impact: None
          eval_expr: "'${0}' == 'root:root';"
          default_value: By default, in OpenShift 4, kube-scheduler-pod.yaml file ownership is set to root:root.
          references:
            - https://docs.openshift.com/container-platform/4.3/architecture/control- plane.html#defining-masters_control-plane
            - https://docs.openshift.com/container-platform/4.5/operators/operator- reference.html#cluster-kube-scheduler-operator_red-hat-operators
            - https://docs.openshift.com/container-platform/4.3/nodes/scheduling/nodes- scheduler-about.html
            - https://kubernetes.io/docs/reference/command-line-tools-reference/kube- scheduler/
        - name: '1.1.7 Ensure that the etcd pod specification file permissions are set to 644 or more restrictive (Automated)'
          description: Ensure that the /etc/kubernetes/manifests/etcd.yaml file has permissions of 644 or more restrictive.
          profile_applicability: Master
          audit:
            - '#!/bin/bash for i in $(oc get pods -n openshift-etcd -l app=etcd -o name | grep etcd ) do
                           echo "check pod $i"
                           oc rsh -n openshift-etcd $i \
                           stat -c %a /etc/kubernetes/manifests/etcd-pod.yaml done'
          remediation: No remediation required; file permissions are managed by the operator.
          check_type: multi_param
          impact: None
          eval_expr: "${0} <= 644"
          default_value: By default, in OpenShift 4, /etc/kubernetes/manifests/etcd-pod.yaml file has permissions of 644.
          references:
            - https://docs.openshift.com/container-platform/4.3/architecture/control- plane.html#defining-masters_control-plane
            - https://github.com/openshift/cluster-etcd- operator/blob/master/bindata/etcd/pod.yaml
            - https://etcd.io/
            - https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/
        - name: '1.1.8 Ensure that the etcd pod specification file ownership is set to root:root (Automated)'
          description: Ensure that the /etc/kubernetes/manifests/etcd.yaml file ownership is set to root:root.
          profile_applicability: Master
          audit:
            - '#!/bin/bash for i in $(oc get pods -n openshift-etcd -l app=etcd -o name | grep etcd ) do
                           echo "check pod $i"
                           oc rsh -n openshift-etcd $i \
                           stat -c %U:%G /etc/kubernetes/manifests/etcd-pod.yaml done'
          remediation: No remediation required; file permissions are managed by the operator.
          check_type: multi_param
          impact: None
          eval_expr: "'${0}' == 'root:root';"
          default_value: By default, in OpenShift 4, /etc/kubernetes/manifests/etcd-member.yaml file ownership is set to root:root.
          references:
            - https://coreos.com/etcd
            - https://kubernetes.io/docs/admin/etcd/
            - https://docs.openshift.com/container-platform/4.3/architecture/control-
            - plane.html#defining-masters_control-plane
        - name: '1.1.9 Ensure that the Container Network Interface file permissions are set to 644 or more restrictive (Manual)'
          description: Ensure that the Container Network Interface files have permissions of 644 or more restrictive.
          profile_applicability: Master
          audit:
            - '
               # For CNI multus
               for i in $(oc get pods -n openshift-multus -l app=multus -oname); do oc exec -n openshift-multus $i -- /bin/bash -c "stat -c \"%a %n\" /host/etc/cni/net.d/*.conf"; done
               for i in $(oc get pods -n openshift-multus -l app=multus -oname); do oc exec -n openshift-multus $i -- /bin/bash -c "stat -c \"%a %n\" /host/var/run/multus/cni/net.d/*.conf"; done
               # For SDN pods
               for i in $(oc get pods -n openshift-sdn -l app=sdn -oname); do oc exec -n openshift-sdn $i -- find /var/lib/cni/networks/openshift-sdn -type f -exec stat -c %a {} \;; done
               for i in $(oc get pods -n openshift-sdn -l app=sdn -oname); do oc exec -n openshift-sdn $i -- find /var/run/openshift-sdn -type f -exec stat -c %a {} \;; done
               # For OVS pods
               for i in $(oc get pods -n openshift-sdn -l app=ovs -oname); do oc exec -n openshift-sdn $i -- find /var/run/openvswitch -type f -exec stat -c %a {} \;; done
               for i in $(oc get pods -n openshift-sdn -l app=ovs -oname); do oc exec -n openshift-sdn $i -- find /etc/openvswitch -type f -exec stat -c %a {} \;; done
               for i in $(oc get pods -n openshift-sdn -l app=ovs -oname); do oc exec -n openshift-sdn $i -- find /run/openvswitch -type f -exec stat -c %a {} \;; done'
          remediation: No remediation required; file permissions are managed by the operator.
          check_type: multi_param
          impact: None
          eval_expr: "'${0}' == 'root:root';"
          type: manual
          default_value: 'In OpenShift 4, the default values are:
                          /host/etc/cni/net.d/00-multus.conf = 600/host/var/run/multus/cni/net.d/80-
                          openshift-network.conf = 644/var/lib/cni/networks/openshift-sdn/* = 644 /var/run/openshift-sdn/cniserver/config.json
                          = 444/var/run/openvswitch/ovs- vswitchd.pid = 644/etc/openvswitch/conf.db = 644/etc/openvswitch/system- id.conf =
                           644/etc/openvswitch/.conf.db.~lock~ = 600/run/openvswitch/ovs- vswitchd.pid = 644/run/openvswitch/ovsdb-server.pid = 644'
          references:
            - https://docs.openshift.com/container-platform/4.3/networking/cluster-network- operator.html
            - https://kubernetes.io/docs/concepts/cluster-administration/networking/